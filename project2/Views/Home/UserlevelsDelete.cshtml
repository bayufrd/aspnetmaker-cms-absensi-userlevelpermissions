@{
    // View
    View = this;

    // Check action result
    if (userlevelsDelete.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = userlevelsDelete.UseLayout ? "_Layout" : "";
}
<script>
var currentTable = @Html.Raw(ConvertToJson(userlevelsDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { userlevels: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fuserlevelsdelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fuserlevelsdelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@userlevelsDelete.ShowPageHeader()
@userlevelsDelete.ShowMessages()
<form name="fuserlevelsdelete" id="fuserlevelsdelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in userlevelsDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(userlevelsDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(userlevelsDelete.TableContainerClass)" style="@(userlevelsDelete.TableContainerStyle)">
<table class="@(userlevelsDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (userlevelsDelete.UserLevelID.Visible) { // userlevelsDelete.UserLevelID.Visible (begin)
        <th class="@Html.Raw(userlevelsDelete.UserLevelID.HeaderCellClass)"><span id="elh_userlevels_UserLevelID" class="userlevels_UserLevelID">@Html.Raw(userlevelsDelete.UserLevelID.Caption)</span></th>
} @* userlevelsDelete.UserLevelID.Visible (end) *@
@if (userlevelsDelete.UserLevelName.Visible) { // userlevelsDelete.UserLevelName.Visible (begin)
        <th class="@Html.Raw(userlevelsDelete.UserLevelName.HeaderCellClass)"><span id="elh_userlevels_UserLevelName" class="userlevels_UserLevelName">@Html.Raw(userlevelsDelete.UserLevelName.Caption)</span></th>
} @* userlevelsDelete.UserLevelName.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ userlevelsDelete.RecordCount = 0; }
@while (userlevelsDelete.Recordset != null && await userlevelsDelete.Recordset.ReadAsync()) { // DN
    userlevelsDelete.RecordCount++;
    userlevelsDelete.RowCount++;

    // Set row properties
    userlevelsDelete.ResetAttributes();
    userlevelsDelete.RowType = RowType.View; // View

    // Get the field contents
    await userlevelsDelete.LoadRowValues(userlevelsDelete.Recordset);

    // Render row
    await userlevelsDelete.RenderRow();
    <tr @Html.Raw(userlevelsDelete.RowAttributes)>
@if (userlevelsDelete.UserLevelID.Visible) { // userlevelsDelete.UserLevelID.Visible (begin)
        <td @Html.Raw(userlevelsDelete.UserLevelID.CellAttributes)>
<span id="">
<span @Html.Raw(userlevelsDelete.UserLevelID.ViewAttributes)>
@Html.Raw(userlevelsDelete.UserLevelID.GetViewValue())</span>
</span></td>
} @* userlevelsDelete.UserLevelID.Visible (end) *@
@if (userlevelsDelete.UserLevelName.Visible) { // userlevelsDelete.UserLevelName.Visible (begin)
        <td @Html.Raw(userlevelsDelete.UserLevelName.CellAttributes)>
<span id="">
<span @Html.Raw(userlevelsDelete.UserLevelName.ViewAttributes)>
@Html.Raw(userlevelsDelete.UserLevelName.GetViewValue())</span>
</span></td>
} @* userlevelsDelete.UserLevelName.Visible (end) *@
    </tr>
}
@{ userlevelsDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(userlevelsDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@userlevelsDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
