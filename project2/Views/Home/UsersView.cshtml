@{
    // View
    View = this;

    // Check action result
    if (usersView.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = usersView.UseLayout ? "_Layout" : "";
}
@if (!usersView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @usersView.ExportOptions.RenderBody()
    @usersView.OtherOptions.RenderBody()
</div>
}
@usersView.ShowPageHeader()
@usersView.ShowMessages()
<main class="view">
<form name="fusersview" id="fusersview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!usersView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(usersView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { users: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fusersview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fusersview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(usersView.IsModal)">
<table class="@(usersView.TableClass)">
@if (usersView.user_id.Visible) { // usersView.user_id.Visible (begin)
    <tr id="r_user_id" @Html.Raw(usersView.user_id.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_users_user_id">@Html.Raw(usersView.user_id.Caption)</span></td>
        <td data-name="user_id" @Html.Raw(usersView.user_id.CellAttributes)>
<span id="el_users_user_id">
<span @Html.Raw(usersView.user_id.ViewAttributes)>
@Html.Raw(usersView.user_id.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.user_id.Visible (end) *@
@if (usersView._username.Visible) { // usersView._username.Visible (begin)
    <tr id="r__username" @Html.Raw(usersView._username.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_users__username">@Html.Raw(usersView._username.Caption)</span></td>
        <td data-name="_username" @Html.Raw(usersView._username.CellAttributes)>
<span id="el_users__username">
<span @Html.Raw(usersView._username.ViewAttributes)>
@Html.Raw(usersView._username.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView._username.Visible (end) *@
@if (usersView.password.Visible) { // usersView.password.Visible (begin)
    <tr id="r_password" @Html.Raw(usersView.password.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_users_password">@Html.Raw(usersView.password.Caption)</span></td>
        <td data-name="password" @Html.Raw(usersView.password.CellAttributes)>
<span id="el_users_password">
<span @Html.Raw(usersView.password.ViewAttributes)>
@Html.Raw(usersView.password.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.password.Visible (end) *@
@if (usersView._email.Visible) { // usersView._email.Visible (begin)
    <tr id="r__email" @Html.Raw(usersView._email.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_users__email">@Html.Raw(usersView._email.Caption)</span></td>
        <td data-name="_email" @Html.Raw(usersView._email.CellAttributes)>
<span id="el_users__email">
<span @Html.Raw(usersView._email.ViewAttributes)>
@Html.Raw(usersView._email.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView._email.Visible (end) *@
@if (usersView.user_level_id.Visible) { // usersView.user_level_id.Visible (begin)
    <tr id="r_user_level_id" @Html.Raw(usersView.user_level_id.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_users_user_level_id">@Html.Raw(usersView.user_level_id.Caption)</span></td>
        <td data-name="user_level_id" @Html.Raw(usersView.user_level_id.CellAttributes)>
<span id="el_users_user_level_id">
<span @Html.Raw(usersView.user_level_id.ViewAttributes)>
@Html.Raw(usersView.user_level_id.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.user_level_id.Visible (end) *@
</table>
@{ usersView.CloseRecordset(); }
</form>
</main>
@usersView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!usersView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
